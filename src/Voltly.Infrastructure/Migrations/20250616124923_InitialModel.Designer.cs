// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Oracle.EntityFrameworkCore.Metadata;
using Voltly.Infrastructure.Persistence;

#nullable disable

namespace Voltly.Infrastructure.Migrations
{
    [DbContext(typeof(VoltlyDbContext))]
    [Migration("20250616124923_InitialModel")]
    partial class InitialModel
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            OracleModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Voltly.Domain.Entities.Alert", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(19)");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("AlertDate")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(10)");

                    b.Property<double>("ConsumptionKwh")
                        .HasColumnType("BINARY_DOUBLE");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TIMESTAMP(7)")
                        .HasDefaultValueSql("SYSTIMESTAMP");

                    b.Property<long>("EquipmentId")
                        .HasColumnType("NUMBER(19)");

                    b.Property<double>("ExceededByKwh")
                        .HasColumnType("BINARY_DOUBLE");

                    b.Property<double>("LimitKwh")
                        .HasColumnType("BINARY_DOUBLE");

                    b.Property<string>("Message")
                        .HasMaxLength(500)
                        .HasColumnType("NVARCHAR2(500)");

                    b.HasKey("Id");

                    b.HasIndex("EquipmentId");

                    b.ToTable("TB_ALERTS", (string)null);
                });

            modelBuilder.Entity("Voltly.Domain.Entities.AutomaticAction", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(19)");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("Details")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("NVARCHAR2(500)");

                    b.Property<long>("EquipmentId")
                        .HasColumnType("NUMBER(19)");

                    b.Property<DateTime>("ExecutedAt")
                        .HasColumnType("TIMESTAMP(7)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("NVARCHAR2(40)");

                    b.HasKey("Id");

                    b.HasIndex("EquipmentId");

                    b.ToTable("TB_AUTOMATIC_ACTIONS");
                });

            modelBuilder.Entity("Voltly.Domain.Entities.ConsumptionLimit", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(19)");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("ComputedAt")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(10)");

                    b.Property<long>("EquipmentId")
                        .HasColumnType("NUMBER(19)");

                    b.Property<double>("LimitKwh")
                        .HasColumnType("BINARY_DOUBLE");

                    b.HasKey("Id");

                    b.HasIndex("EquipmentId");

                    b.ToTable("TB_CONSUMPTION_LIMITS");
                });

            modelBuilder.Entity("Voltly.Domain.Entities.DailyReport", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(19)");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<double>("Co2EmissionKg")
                        .HasColumnType("BINARY_DOUBLE");

                    b.Property<double>("ConsumptionKwh")
                        .HasColumnType("BINARY_DOUBLE");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TIMESTAMP(7)");

                    b.Property<int>("EfficiencyRating")
                        .HasColumnType("NUMBER(10)");

                    b.Property<long>("EquipmentId")
                        .HasColumnType("NUMBER(19)");

                    b.Property<string>("ReportDate")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(10)");

                    b.HasKey("Id");

                    b.HasIndex("EquipmentId");

                    b.ToTable("TB_DAILY_REPORTS");
                });

            modelBuilder.Entity("Voltly.Domain.Entities.EnergyReading", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(19)");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<double>("OccupancyPct")
                        .HasColumnType("BINARY_DOUBLE");

                    b.Property<double>("PowerKw")
                        .HasColumnType("BINARY_DOUBLE");

                    b.Property<long>("SensorId")
                        .HasColumnType("NUMBER(19)");

                    b.Property<DateTime>("TakenAt")
                        .HasColumnType("TIMESTAMP(7)");

                    b.HasKey("Id");

                    b.HasIndex("SensorId");

                    b.ToTable("TB_ENERGY_READINGS");
                });

            modelBuilder.Entity("Voltly.Domain.Entities.Equipment", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(19)");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<int>("Active")
                        .HasColumnType("NUMBER(1)");

                    b.Property<double>("DailyLimitKwh")
                        .HasColumnType("BINARY_DOUBLE");

                    b.Property<string>("Description")
                        .HasMaxLength(250)
                        .HasColumnType("NVARCHAR2(250)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(120)
                        .HasColumnType("NVARCHAR2(120)");

                    b.Property<long>("OwnerId")
                        .HasColumnType("NUMBER(19)");

                    b.HasKey("Id");

                    b.HasIndex("OwnerId", "Name")
                        .IsUnique();

                    b.ToTable("TB_EQUIPMENTS", (string)null);
                });

            modelBuilder.Entity("Voltly.Domain.Entities.Sensor", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(19)");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<long>("EquipmentId")
                        .HasColumnType("NUMBER(19)");

                    b.Property<string>("SerialNumber")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("NVARCHAR2(100)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("NVARCHAR2(80)");

                    b.HasKey("Id");

                    b.HasIndex("EquipmentId");

                    b.HasIndex("SerialNumber")
                        .IsUnique();

                    b.ToTable("TB_SENSORS", (string)null);
                });

            modelBuilder.Entity("Voltly.Domain.Entities.User", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(19)");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("TIMESTAMP(7)");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TIMESTAMP(7)")
                        .HasDefaultValueSql("SYSTIMESTAMP");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(180)
                        .HasColumnType("NVARCHAR2(180)");

                    b.Property<int>("IsActive")
                        .HasColumnType("NUMBER(1)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(120)
                        .HasColumnType("NVARCHAR2(120)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("NVARCHAR2(100)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("NVARCHAR2(30)");

                    b.Property<DateTime?>("UpdatedAt")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("TIMESTAMP(7)");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.ToTable("TB_USERS", (string)null);
                });

            modelBuilder.Entity("Voltly.Domain.Entities.Alert", b =>
                {
                    b.HasOne("Voltly.Domain.Entities.Equipment", "Equipment")
                        .WithMany()
                        .HasForeignKey("EquipmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Equipment");
                });

            modelBuilder.Entity("Voltly.Domain.Entities.AutomaticAction", b =>
                {
                    b.HasOne("Voltly.Domain.Entities.Equipment", "Equipment")
                        .WithMany()
                        .HasForeignKey("EquipmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Equipment");
                });

            modelBuilder.Entity("Voltly.Domain.Entities.ConsumptionLimit", b =>
                {
                    b.HasOne("Voltly.Domain.Entities.Equipment", "Equipment")
                        .WithMany()
                        .HasForeignKey("EquipmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Equipment");
                });

            modelBuilder.Entity("Voltly.Domain.Entities.DailyReport", b =>
                {
                    b.HasOne("Voltly.Domain.Entities.Equipment", "Equipment")
                        .WithMany()
                        .HasForeignKey("EquipmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Equipment");
                });

            modelBuilder.Entity("Voltly.Domain.Entities.EnergyReading", b =>
                {
                    b.HasOne("Voltly.Domain.Entities.Sensor", "Sensor")
                        .WithMany()
                        .HasForeignKey("SensorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Sensor");
                });

            modelBuilder.Entity("Voltly.Domain.Entities.Equipment", b =>
                {
                    b.HasOne("Voltly.Domain.Entities.User", "Owner")
                        .WithMany("Equipments")
                        .HasForeignKey("OwnerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Owner");
                });

            modelBuilder.Entity("Voltly.Domain.Entities.Sensor", b =>
                {
                    b.HasOne("Voltly.Domain.Entities.Equipment", "Equipment")
                        .WithMany("Sensors")
                        .HasForeignKey("EquipmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Equipment");
                });

            modelBuilder.Entity("Voltly.Domain.Entities.Equipment", b =>
                {
                    b.Navigation("Sensors");
                });

            modelBuilder.Entity("Voltly.Domain.Entities.User", b =>
                {
                    b.Navigation("Equipments");
                });
#pragma warning restore 612, 618
        }
    }
}
